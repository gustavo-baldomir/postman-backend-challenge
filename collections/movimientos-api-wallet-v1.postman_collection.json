{
	"info": {
		"_postman_id": "0b4b8deb-917b-4b81-9893-9408ad25abb2",
		"name": "movimientos-api-waller-v1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22747449"
	},
	"item": [
		{
			"name": "Consultar Movimientos - [NOVA_TRUST_BANK]",
			"item": [
				{
					"name": "[TC-011] Cuenta Valida [99083422 - CC$]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200 OK - Cuenta Valida\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Validar el PATH\r",
									"pm.test(\"El PATH de la solicitud es CORRECTO\", () => {\r",
									"    const path = pm.request.url.path.join('/');\r",
									"    try {\r",
									"        pm.expect(path).to.eql('wallet/ultmovimientos');\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Error en el path:\", { path });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Obtener parámetros de query\r",
									"let params = {};\r",
									"pm.request.url.query.each(param => {\r",
									"    params[param.key] = param.value;\r",
									"});\r",
									"const fechaDesde = params.fecha_desde;\r",
									"const fechaHasta = params.fecha_hasta;\r",
									"\r",
									"// Validar formato AAAAMMDD\r",
									"pm.test(\"fecha_desde tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaDesde)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_desde:\", { fechaDesde });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"fecha_hasta tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaHasta)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_hasta:\", { fechaHasta });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Validar que fecha_desde < fecha_hasta\r",
									"pm.test(\"fecha_desde es MENOR que fecha_hasta\", () => {\r",
									"    const desdeNum = parseInt(fechaDesde, 10);\r",
									"    const hastaNum = parseInt(fechaHasta, 10);\r",
									"    try {\r",
									"        pm.expect(desdeNum).to.be.below(hastaNum);\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ fecha_desde no es menor que fecha_hasta:\", { desdeNum, hastaNum });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"const Ajv = require('ajv');\r",
									"const ajv = new Ajv({ allErrors: true, strict: true });\r",
									"\r",
									"const schema = {\r",
									"  type: \"object\",\r",
									"  additionalProperties: false,\r",
									"  required: [\"movimientos\"],\r",
									"  properties: {\r",
									"    movimientos: {\r",
									"      type: \"array\",\r",
									"      items: {\r",
									"        type: \"object\",\r",
									"        additionalProperties: false,\r",
									"        oneOf: [\r",
									"          { required: [\"fecha\", \"monto\", \"descripcion\"] },\r",
									"          { required: [\"fecha\", \"monto\", \"descripción\"] }\r",
									"        ],\r",
									"        properties: {\r",
									"          fecha: {\r",
									"            type: \"string\",\r",
									"            pattern: \"^\\\\d{8}$\"\r",
									"          },\r",
									"          monto: {\r",
									"            type: \"number\",\r",
									"            minimum: -10000,\r",
									"            maximum: 10000\r",
									"          },\r",
									"          descripcion: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          },\r",
									"          descripción: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    }\r",
									"  }\r",
									"};\r",
									"\r",
									"const validate = ajv.compile(schema);\r",
									"const jsonData = pm.response.json();\r",
									"const valid = validate(jsonData);\r",
									"\r",
									"if (!valid) {\r",
									"  console.error(\"Errores del schema:\", validate.errors);\r",
									"}\r",
									"pm.test(\"JSON Schema VALIDO\", () => {\r",
									"  pm.expect(valid, JSON.stringify(validate.errors, null, 2)).to.be.true;\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Aca defino los tipos de transacciónes que siempre deben ser débito (-) //\r",
									"const debitoTypes = [\r",
									"  \"Retiro de cajero automático\",\r",
									"  \"Transferencia a otra cuenta\",\r",
									"  \"Compra\",\r",
									"  \"Pago de impuestos y servicios\"\r",
									"];\r",
									"\r",
									"// Se extrae de la respuesta  los movimientos del array \"movimientos\" //\r",
									"const movimientos = pm.response.json().movimientos || [];\r",
									"\r",
									"// Test: Que VALIDA que cada movimiento de débito debe tener un valor negativo (-) //\r",
									"pm.test(\"Las transacciones de tipo débito vienen con valor negativo (-)\", () => {\r",
									"  movimientos.forEach((mov, idx) => {\r",
									"    if (debitoTypes.includes(mov.descripcion)) { \r",
									"      if (mov.monto >= 0) { // Si el monto no es negativo, se imprime en consola para depurar el error //\r",
									"        console.log(\r",
									"          `❌ Error en Movimiento #${idx + 1}: descripción=\"${mov.descripcion}\", monto=${mov.monto}`\r",
									"        );\r",
									"      }\r",
									"      pm.expect(\r",
									"        mov.monto,\r",
									"        `Movimiento #${idx + 1} (“${mov.descripcion}”) debería ser negativo`\r",
									"      ).to.be.below(0);\r",
									"    }\r",
									"  });\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"99083422\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL-api-challenge}}/wallet/ultmovimientos?fecha_desde=20200101&fecha_hasta=20250417",
							"host": [
								"{{URL-api-challenge}}"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "20200101"
								},
								{
									"key": "fecha_hasta",
									"value": "20250417"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": []
				},
				{
					"name": "[TC-012] Cuenta Valida [96703737 - CC$]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200 OK - Cuenta Valida\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Validar el PATH\r",
									"pm.test(\"El PATH de la solicitud es CORRECTO\", () => {\r",
									"    const path = pm.request.url.path.join('/');\r",
									"    try {\r",
									"        pm.expect(path).to.eql('wallet/ultmovimientos');\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Error en el path:\", { path });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Obtener parámetros de query\r",
									"let params = {};\r",
									"pm.request.url.query.each(param => {\r",
									"    params[param.key] = param.value;\r",
									"});\r",
									"const fechaDesde = params.fecha_desde;\r",
									"const fechaHasta = params.fecha_hasta;\r",
									"\r",
									"// Validar formato AAAAMMDD\r",
									"pm.test(\"fecha_desde tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaDesde)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_desde:\", { fechaDesde });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"fecha_hasta tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaHasta)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_hasta:\", { fechaHasta });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Validar que fecha_desde < fecha_hasta\r",
									"pm.test(\"fecha_desde es MENOR que fecha_hasta\", () => {\r",
									"    const desdeNum = parseInt(fechaDesde, 10);\r",
									"    const hastaNum = parseInt(fechaHasta, 10);\r",
									"    try {\r",
									"        pm.expect(desdeNum).to.be.below(hastaNum);\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ fecha_desde no es menor que fecha_hasta:\", { desdeNum, hastaNum });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"const Ajv = require('ajv');\r",
									"const ajv = new Ajv({ allErrors: true, strict: true });\r",
									"\r",
									"const schema = {\r",
									"  type: \"object\",\r",
									"  additionalProperties: false,\r",
									"  required: [\"movimientos\"],\r",
									"  properties: {\r",
									"    movimientos: {\r",
									"      type: \"array\",\r",
									"      items: {\r",
									"        type: \"object\",\r",
									"        additionalProperties: false,\r",
									"        oneOf: [\r",
									"          { required: [\"fecha\", \"monto\", \"descripcion\"] },\r",
									"          { required: [\"fecha\", \"monto\", \"descripción\"] }\r",
									"        ],\r",
									"        properties: {\r",
									"          fecha: {\r",
									"            type: \"string\",\r",
									"            pattern: \"^\\\\d{8}$\"\r",
									"          },\r",
									"          monto: {\r",
									"            type: \"number\",\r",
									"            minimum: -10000,\r",
									"            maximum: 10000\r",
									"          },\r",
									"          descripcion: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          },\r",
									"          descripción: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    }\r",
									"  }\r",
									"};\r",
									"\r",
									"const validate = ajv.compile(schema);\r",
									"const jsonData = pm.response.json();\r",
									"const valid = validate(jsonData);\r",
									"\r",
									"if (!valid) {\r",
									"  console.error(\"Errores del schema:\", validate.errors);\r",
									"}\r",
									"pm.test(\"JSON Schema VALIDO\", () => {\r",
									"  pm.expect(valid, JSON.stringify(validate.errors, null, 2)).to.be.true;\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Aca defino los tipos de transacciónes que siempre deben ser débito (-) //\r",
									"const debitoTypes = [\r",
									"  \"Retiro de cajero automático\",\r",
									"  \"Transferencia a otra cuenta\",\r",
									"  \"Compra\",\r",
									"  \"Pago de impuestos y servicios\"\r",
									"];\r",
									"\r",
									"// Se extrae de la respuesta  los movimientos del array \"movimientos\" //\r",
									"const movimientos = pm.response.json().movimientos || [];\r",
									"\r",
									"// Test: Que VALIDA que cada movimiento de débito debe tener un valor negativo (-) //\r",
									"pm.test(\"Las transacciones de tipo débito vienen con valor negativo (-)\", () => {\r",
									"  movimientos.forEach((mov, idx) => {\r",
									"    if (debitoTypes.includes(mov.descripcion)) { \r",
									"      if (mov.monto >= 0) { // Si el monto no es negativo, se imprime en consola para depurar el error //\r",
									"        console.log(\r",
									"          `❌ Error en Movimiento #${idx + 1}: descripción=\"${mov.descripcion}\", monto=${mov.monto}`\r",
									"        );\r",
									"      }\r",
									"      pm.expect(\r",
									"        mov.monto,\r",
									"        `Movimiento #${idx + 1} (“${mov.descripcion}”) debería ser negativo`\r",
									"      ).to.be.below(0);\r",
									"    }\r",
									"  });\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"96703737\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL-api-challenge}}/wallet/ultmovimientos?fecha_desde=20200110&fecha_hasta=20250415",
							"host": [
								"{{URL-api-challenge}}"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "20200110"
								},
								{
									"key": "fecha_hasta",
									"value": "20250415"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": []
				},
				{
					"name": "[TC-013] Cuenta Valida [93125576 - CAUSD]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200 OK - Cuenta Valida\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Validar el PATH\r",
									"pm.test(\"El PATH de la solicitud es CORRECTO\", () => {\r",
									"    const path = pm.request.url.path.join('/');\r",
									"    try {\r",
									"        pm.expect(path).to.eql('wallet/ultmovimientos');\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Error en el path:\", { path });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Obtener parámetros de query\r",
									"let params = {};\r",
									"pm.request.url.query.each(param => {\r",
									"    params[param.key] = param.value;\r",
									"});\r",
									"const fechaDesde = params.fecha_desde;\r",
									"const fechaHasta = params.fecha_hasta;\r",
									"\r",
									"// Validar formato AAAAMMDD\r",
									"pm.test(\"fecha_desde tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaDesde)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_desde:\", { fechaDesde });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"fecha_hasta tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaHasta)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_hasta:\", { fechaHasta });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Validar que fecha_desde < fecha_hasta\r",
									"pm.test(\"fecha_desde es MENOR que fecha_hasta\", () => {\r",
									"    const desdeNum = parseInt(fechaDesde, 10);\r",
									"    const hastaNum = parseInt(fechaHasta, 10);\r",
									"    try {\r",
									"        pm.expect(desdeNum).to.be.below(hastaNum);\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ fecha_desde no es menor que fecha_hasta:\", { desdeNum, hastaNum });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"const Ajv = require('ajv');\r",
									"const ajv = new Ajv({ allErrors: true, strict: true });\r",
									"\r",
									"const schema = {\r",
									"  type: \"object\",\r",
									"  additionalProperties: false,\r",
									"  required: [\"movimientos\"],\r",
									"  properties: {\r",
									"    movimientos: {\r",
									"      type: \"array\",\r",
									"      items: {\r",
									"        type: \"object\",\r",
									"        additionalProperties: false,\r",
									"        oneOf: [\r",
									"          { required: [\"fecha\", \"monto\", \"descripcion\"] },\r",
									"          { required: [\"fecha\", \"monto\", \"descripción\"] }\r",
									"        ],\r",
									"        properties: {\r",
									"          fecha: {\r",
									"            type: \"string\",\r",
									"            pattern: \"^\\\\d{8}$\"\r",
									"          },\r",
									"          monto: {\r",
									"            type: \"number\",\r",
									"            minimum: -10000,\r",
									"            maximum: 10000\r",
									"          },\r",
									"          descripcion: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          },\r",
									"          descripción: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    }\r",
									"  }\r",
									"};\r",
									"\r",
									"const validate = ajv.compile(schema);\r",
									"const jsonData = pm.response.json();\r",
									"const valid = validate(jsonData);\r",
									"\r",
									"if (!valid) {\r",
									"  console.error(\"Errores del schema:\", validate.errors);\r",
									"}\r",
									"pm.test(\"JSON Schema VALIDO\", () => {\r",
									"  pm.expect(valid, JSON.stringify(validate.errors, null, 2)).to.be.true;\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Aca defino los tipos de transacciónes que siempre deben ser débito (-) //\r",
									"const debitoTypes = [\r",
									"  \"Retiro de cajero automático\",\r",
									"  \"Transferencia a otra cuenta\",\r",
									"  \"Compra\",\r",
									"  \"Pago de impuestos y servicios\"\r",
									"];\r",
									"\r",
									"// Se extrae de la respuesta  los movimientos del array \"movimientos\" //\r",
									"const movimientos = pm.response.json().movimientos || [];\r",
									"\r",
									"// Test: Que VALIDA que cada movimiento de débito debe tener un valor negativo (-) //\r",
									"pm.test(\"Las transacciones de tipo débito vienen con valor negativo (-)\", () => {\r",
									"  movimientos.forEach((mov, idx) => {\r",
									"    if (debitoTypes.includes(mov.descripcion)) { \r",
									"      if (mov.monto >= 0) { // Si el monto no es negativo, se imprime en consola para depurar el error //\r",
									"        console.log(\r",
									"          `❌ Error en Movimiento #${idx + 1}: descripción=\"${mov.descripcion}\", monto=${mov.monto}`\r",
									"        );\r",
									"      }\r",
									"      pm.expect(\r",
									"        mov.monto,\r",
									"        `Movimiento #${idx + 1} (“${mov.descripcion}”) debería ser negativo`\r",
									"      ).to.be.below(0);\r",
									"    }\r",
									"  });\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"93125576\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL-api-challenge}}/wallet/ultmovimientos?fecha_desde=20200110&fecha_hasta=20250415",
							"host": [
								"{{URL-api-challenge}}"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "20200110"
								},
								{
									"key": "fecha_hasta",
									"value": "20250415"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"pm.sendRequest({\r",
							"    url: pm.environment.get('URL-api-challenge') + '/wallet/sesion',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': 'application/json'\r",
							"    },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            'username': pm.environment.get(\"user_name\"),\r",
							"            'password': pm.environment.get(\"password\")\r",
							"        })\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    if (err) {\r",
							"        console.log(err);\r",
							"    } else {\r",
							"        pm.environment.set('access_token', res.json().access_token);\r",
							"    }\r",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Consultar Movimientos - [TITANIUM_FINANCE_BANK]",
			"item": [
				{
					"name": "[TC-014] Cuenta Valida [1209383422 - CA$]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200 OK - Cuenta Valida\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Validar el PATH\r",
									"pm.test(\"El PATH de la solicitud es CORRECTO\", () => {\r",
									"    const path = pm.request.url.path.join('/');\r",
									"    try {\r",
									"        pm.expect(path).to.eql('wallet/ultmovimientos');\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Error en el path:\", { path });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Obtener parámetros de query\r",
									"let params = {};\r",
									"pm.request.url.query.each(param => {\r",
									"    params[param.key] = param.value;\r",
									"});\r",
									"const fechaDesde = params.fecha_desde;\r",
									"const fechaHasta = params.fecha_hasta;\r",
									"\r",
									"// Validar formato AAAAMMDD\r",
									"pm.test(\"fecha_desde tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaDesde)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_desde:\", { fechaDesde });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"fecha_hasta tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaHasta)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_hasta:\", { fechaHasta });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Validar que fecha_desde < fecha_hasta\r",
									"pm.test(\"fecha_desde es MENOR que fecha_hasta\", () => {\r",
									"    const desdeNum = parseInt(fechaDesde, 10);\r",
									"    const hastaNum = parseInt(fechaHasta, 10);\r",
									"    try {\r",
									"        pm.expect(desdeNum).to.be.below(hastaNum);\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ fecha_desde no es menor que fecha_hasta:\", { desdeNum, hastaNum });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"const Ajv = require('ajv');\r",
									"const ajv = new Ajv({ allErrors: true, strict: true });\r",
									"\r",
									"const schema = {\r",
									"  type: \"object\",\r",
									"  additionalProperties: false,\r",
									"  required: [\"movimientos\"],\r",
									"  properties: {\r",
									"    movimientos: {\r",
									"      type: \"array\",\r",
									"      items: {\r",
									"        type: \"object\",\r",
									"        additionalProperties: false,\r",
									"        oneOf: [\r",
									"          { required: [\"fecha\", \"monto\", \"descripcion\"] },\r",
									"          { required: [\"fecha\", \"monto\", \"descripción\"] }\r",
									"        ],\r",
									"        properties: {\r",
									"          fecha: {\r",
									"            type: \"string\",\r",
									"            pattern: \"^\\\\d{8}$\"\r",
									"          },\r",
									"          monto: {\r",
									"            type: \"number\",\r",
									"            minimum: -10000,\r",
									"            maximum: 10000\r",
									"          },\r",
									"          descripcion: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          },\r",
									"          descripción: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    }\r",
									"  }\r",
									"};\r",
									"\r",
									"const validate = ajv.compile(schema);\r",
									"const jsonData = pm.response.json();\r",
									"const valid = validate(jsonData);\r",
									"\r",
									"if (!valid) {\r",
									"  console.error(\"Errores del schema:\", validate.errors);\r",
									"}\r",
									"pm.test(\"JSON Schema VALIDO\", () => {\r",
									"  pm.expect(valid, JSON.stringify(validate.errors, null, 2)).to.be.true;\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Aca defino los tipos de transacciónes que siempre deben ser débito (-) //\r",
									"const debitoTypes = [\r",
									"  \"Retiro de cajero automático\",\r",
									"  \"Transferencia a otra cuenta\",\r",
									"  \"Compra\",\r",
									"  \"Pago de impuestos y servicios\"\r",
									"];\r",
									"\r",
									"// Se extrae de la respuesta  los movimientos del array \"movimientos\" //\r",
									"const movimientos = pm.response.json().movimientos || [];\r",
									"\r",
									"// Test: Que VALIDA que cada movimiento de débito debe tener un valor negativo (-) //\r",
									"pm.test(\"Las transacciones de tipo débito vienen con valor negativo (-)\", () => {\r",
									"  movimientos.forEach((mov, idx) => {\r",
									"    if (debitoTypes.includes(mov.descripcion)) { \r",
									"      if (mov.monto >= 0) { // Si el monto no es negativo, se imprime en consola para depurar el error //\r",
									"        console.log(\r",
									"          `❌ Error en Movimiento #${idx + 1}: descripción=\"${mov.descripcion}\", monto=${mov.monto}`\r",
									"        );\r",
									"      }\r",
									"      pm.expect(\r",
									"        mov.monto,\r",
									"        `Movimiento #${idx + 1} (“${mov.descripcion}”) debería ser negativo`\r",
									"      ).to.be.below(0);\r",
									"    }\r",
									"  });\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"1209383422\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL-api-challenge}}/wallet/ultmovimientos?fecha_desde=20200110&fecha_hasta=20250415",
							"host": [
								"{{URL-api-challenge}}"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "20200110"
								},
								{
									"key": "fecha_hasta",
									"value": "20250415"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": []
				}
			]
		},
		{
			"name": "Consultar Movimientos - [ASTRA_CAPITAL_BANK]",
			"item": [
				{
					"name": "[TC-015] Cuenta Valida [34948473811 - CC$]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200 OK - Cuenta Valida\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Validar el PATH\r",
									"pm.test(\"El PATH de la solicitud es CORRECTO\", () => {\r",
									"    const path = pm.request.url.path.join('/');\r",
									"    try {\r",
									"        pm.expect(path).to.eql('wallet/ultmovimientos');\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Error en el path:\", { path });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Obtener parámetros de query\r",
									"let params = {};\r",
									"pm.request.url.query.each(param => {\r",
									"    params[param.key] = param.value;\r",
									"});\r",
									"const fechaDesde = params.fecha_desde;\r",
									"const fechaHasta = params.fecha_hasta;\r",
									"\r",
									"// Validar formato AAAAMMDD\r",
									"pm.test(\"fecha_desde tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaDesde)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_desde:\", { fechaDesde });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"fecha_hasta tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaHasta)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_hasta:\", { fechaHasta });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Validar que fecha_desde < fecha_hasta\r",
									"pm.test(\"fecha_desde es MENOR que fecha_hasta\", () => {\r",
									"    const desdeNum = parseInt(fechaDesde, 10);\r",
									"    const hastaNum = parseInt(fechaHasta, 10);\r",
									"    try {\r",
									"        pm.expect(desdeNum).to.be.below(hastaNum);\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ fecha_desde no es menor que fecha_hasta:\", { desdeNum, hastaNum });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"const Ajv = require('ajv');\r",
									"const ajv = new Ajv({ allErrors: true, strict: true });\r",
									"\r",
									"const schema = {\r",
									"  type: \"object\",\r",
									"  additionalProperties: false,\r",
									"  required: [\"movimientos\"],\r",
									"  properties: {\r",
									"    movimientos: {\r",
									"      type: \"array\",\r",
									"      items: {\r",
									"        type: \"object\",\r",
									"        additionalProperties: false,\r",
									"        oneOf: [\r",
									"          { required: [\"fecha\", \"monto\", \"descripcion\"] },\r",
									"          { required: [\"fecha\", \"monto\", \"descripción\"] }\r",
									"        ],\r",
									"        properties: {\r",
									"          fecha: {\r",
									"            type: \"string\",\r",
									"            pattern: \"^\\\\d{8}$\"\r",
									"          },\r",
									"          monto: {\r",
									"            type: \"number\",\r",
									"            minimum: -10000,\r",
									"            maximum: 10000\r",
									"          },\r",
									"          descripcion: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          },\r",
									"          descripción: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    }\r",
									"  }\r",
									"};\r",
									"\r",
									"const validate = ajv.compile(schema);\r",
									"const jsonData = pm.response.json();\r",
									"const valid = validate(jsonData);\r",
									"\r",
									"if (!valid) {\r",
									"  console.error(\"Errores del schema:\", validate.errors);\r",
									"}\r",
									"pm.test(\"JSON Schema VALIDO\", () => {\r",
									"  pm.expect(valid, JSON.stringify(validate.errors, null, 2)).to.be.true;\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Aca defino los tipos de transacciónes que siempre deben ser débito (-) //\r",
									"const debitoTypes = [\r",
									"  \"Retiro de cajero automático\",\r",
									"  \"Transferencia a otra cuenta\",\r",
									"  \"Compra\",\r",
									"  \"Pago de impuestos y servicios\"\r",
									"];\r",
									"\r",
									"// Se extrae de la respuesta  los movimientos del array \"movimientos\" //\r",
									"const movimientos = pm.response.json().movimientos || [];\r",
									"\r",
									"// Test: Que VALIDA que cada movimiento de débito debe tener un valor negativo (-) //\r",
									"pm.test(\"Las transacciones de tipo débito vienen con valor negativo (-)\", () => {\r",
									"  movimientos.forEach((mov, idx) => {\r",
									"    if (debitoTypes.includes(mov.descripcion)) { \r",
									"      if (mov.monto >= 0) { // Si el monto no es negativo, se imprime en consola para depurar el error //\r",
									"        console.log(\r",
									"          `❌ Error en Movimiento #${idx + 1}: descripción=\"${mov.descripcion}\", monto=${mov.monto}`\r",
									"        );\r",
									"      }\r",
									"      pm.expect(\r",
									"        mov.monto,\r",
									"        `Movimiento #${idx + 1} (“${mov.descripcion}”) debería ser negativo`\r",
									"      ).to.be.below(0);\r",
									"    }\r",
									"  });\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"34948473811\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL-api-challenge}}/wallet/ultmovimientos?fecha_desde=20200110&fecha_hasta=20250415",
							"host": [
								"{{URL-api-challenge}}"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "20200110"
								},
								{
									"key": "fecha_hasta",
									"value": "20250415"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": []
				},
				{
					"name": "[TC-016] Cuenta Valida [102033534534521 - CA$]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200 OK - Cuenta Valida\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Validar el PATH\r",
									"pm.test(\"El PATH de la solicitud es CORRECTO\", () => {\r",
									"    const path = pm.request.url.path.join('/');\r",
									"    try {\r",
									"        pm.expect(path).to.eql('wallet/ultmovimientos');\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Error en el path:\", { path });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Obtener parámetros de query\r",
									"let params = {};\r",
									"pm.request.url.query.each(param => {\r",
									"    params[param.key] = param.value;\r",
									"});\r",
									"const fechaDesde = params.fecha_desde;\r",
									"const fechaHasta = params.fecha_hasta;\r",
									"\r",
									"// Validar formato AAAAMMDD\r",
									"pm.test(\"fecha_desde tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaDesde)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_desde:\", { fechaDesde });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"fecha_hasta tiene formato VALIDO AAAAMMDD\", () => {\r",
									"    const regex = /^[0-9]{8}$/;\r",
									"    try {\r",
									"        pm.expect(regex.test(fechaHasta)).to.be.true;\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ Formato inválido en fecha_hasta:\", { fechaHasta });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"// Validar que fecha_desde < fecha_hasta\r",
									"pm.test(\"fecha_desde es MENOR que fecha_hasta\", () => {\r",
									"    const desdeNum = parseInt(fechaDesde, 10);\r",
									"    const hastaNum = parseInt(fechaHasta, 10);\r",
									"    try {\r",
									"        pm.expect(desdeNum).to.be.below(hastaNum);\r",
									"    } catch (error) {\r",
									"        console.log(\"❌ fecha_desde no es menor que fecha_hasta:\", { desdeNum, hastaNum });\r",
									"        throw error;\r",
									"    }\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"const Ajv = require('ajv');\r",
									"const ajv = new Ajv({ allErrors: true, strict: true });\r",
									"\r",
									"const schema = {\r",
									"  type: \"object\",\r",
									"  additionalProperties: false,\r",
									"  required: [\"movimientos\"],\r",
									"  properties: {\r",
									"    movimientos: {\r",
									"      type: \"array\",\r",
									"      items: {\r",
									"        type: \"object\",\r",
									"        additionalProperties: false,\r",
									"        oneOf: [\r",
									"          { required: [\"fecha\", \"monto\", \"descripcion\"] },\r",
									"          { required: [\"fecha\", \"monto\", \"descripción\"] }\r",
									"        ],\r",
									"        properties: {\r",
									"          fecha: {\r",
									"            type: \"string\",\r",
									"            pattern: \"^\\\\d{8}$\"\r",
									"          },\r",
									"          monto: {\r",
									"            type: \"number\",\r",
									"            minimum: -10000,\r",
									"            maximum: 10000\r",
									"          },\r",
									"          descripcion: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          },\r",
									"          descripción: {\r",
									"            type: \"string\",\r",
									"            enum: [\r",
									"              \"Compra\",\r",
									"              \"Plazo Fijo ingreso\",\r",
									"              \"Ingreso en efectivo\",\r",
									"              \"Depósito en efectivo\",\r",
									"              \"Retiro de cajero automático\",\r",
									"              \"Transferencia a otra cuenta\",\r",
									"              \"Transferencia Credito\",\r",
									"              \"Pago de impuestos y servicio\"\r",
									"            ]\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    }\r",
									"  }\r",
									"};\r",
									"\r",
									"const validate = ajv.compile(schema);\r",
									"const jsonData = pm.response.json();\r",
									"const valid = validate(jsonData);\r",
									"\r",
									"if (!valid) {\r",
									"  console.error(\"Errores del schema:\", validate.errors);\r",
									"}\r",
									"pm.test(\"JSON Schema VALIDO\", () => {\r",
									"  pm.expect(valid, JSON.stringify(validate.errors, null, 2)).to.be.true;\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"// Aca defino los tipos de transacciónes que siempre deben ser débito (-) //\r",
									"const debitoTypes = [\r",
									"  \"Retiro de cajero automático\",\r",
									"  \"Transferencia a otra cuenta\",\r",
									"  \"Compra\",\r",
									"  \"Pago de impuestos y servicios\"\r",
									"];\r",
									"\r",
									"// Se extrae de la respuesta  los movimientos del array \"movimientos\" //\r",
									"const movimientos = pm.response.json().movimientos || [];\r",
									"\r",
									"// Test: Que VALIDA que cada movimiento de débito debe tener un valor negativo (-) //\r",
									"pm.test(\"Las transacciones de tipo débito vienen con valor negativo (-)\", () => {\r",
									"  movimientos.forEach((mov, idx) => {\r",
									"    if (debitoTypes.includes(mov.descripcion)) { \r",
									"      if (mov.monto >= 0) { // Si el monto no es negativo, se imprime en consola para depurar el error //\r",
									"        console.log(\r",
									"          `❌ Error en Movimiento #${idx + 1}: descripción=\"${mov.descripcion}\", monto=${mov.monto}`\r",
									"        );\r",
									"      }\r",
									"      pm.expect(\r",
									"        mov.monto,\r",
									"        `Movimiento #${idx + 1} (“${mov.descripcion}”) debería ser negativo`\r",
									"      ).to.be.below(0);\r",
									"    }\r",
									"  });\r",
									"});\r",
									"\r",
									"////////////////////////////////////////////////////////////////\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"102033534534521\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL-api-challenge}}/wallet/ultmovimientos?fecha_desde=20200110&fecha_hasta=20250415",
							"host": [
								"{{URL-api-challenge}}"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "20200110"
								},
								{
									"key": "fecha_hasta",
									"value": "20250415"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": []
				}
			]
		},
		{
			"name": "Validaciones",
			"item": [
				{
					"name": "[TC-017] Consultar Movimientos - Cuenta Invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 400 Bad Request - Consultar Movimientos - Cuenta Invalida \", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje de error: Datos inválidos\", function () {\r",
									"    const res = pm.response.json();\r",
									"\r",
									"    // Verifica que exista la propiedad \"detail\"\r",
									"    pm.expect(res).to.have.property(\"detail\");\r",
									"\r",
									"    // Verifica que el valor sea exactamente el esperado\r",
									"    pm.expect(res.detail).to.eql(\"Datos inválidos\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"99083420\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=20200110&fecha_hasta=20250415",
							"protocol": "https",
							"host": [
								"api-challenge-wallet",
								"onrender",
								"com"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "20200110"
								},
								{
									"key": "fecha_hasta",
									"value": "20250415"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numero_cuenta\": \"0000012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025"
										},
										{
											"key": "fecha_hasta",
											"value": "14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 00:41:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "e6077694-7f11-4939"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "www-authenticate",
									"value": "Bearer"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307659989c83ae2-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Not authenticated\"\n}"
						},
						{
							"name": "405",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numero_cuenta\": \"0000012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01-01-2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01-01-2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 00:50:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "allow",
									"value": "POST"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "ebbc2e4b-8bea-4f4a"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307728c98143e80-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Method Not Allowed\"\n}"
						},
						{
							"name": "422 [BUG]",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ numero_cuenta:  }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 01:00:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "128"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "d4d9df46-629f-4819"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307814bfc0d3b1d-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": [\n        {\n            \"type\": \"json_invalid\",\n            \"loc\": [\n                \"body\",\n                2\n            ],\n            \"msg\": \"JSON decode error\",\n            \"input\": {},\n            \"ctx\": {\n                \"error\": \"Expecting property name enclosed in double quotes\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "411 [BUG]",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<form>HACK</form>\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 01:00:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "107"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "454b13aa-00e1-46d6"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "93078239fe8e2996-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": [\n        {\n            \"type\": \"json_invalid\",\n            \"loc\": [\n                \"body\",\n                0\n            ],\n            \"msg\": \"JSON decode error\",\n            \"input\": {},\n            \"ctx\": {\n                \"error\": \"Expecting value\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "[TC-018] Consultar Movimientos - Numero Cuenta VACIO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 400 Bad Request - Consultar Movimientos - Numero Cuenta VACIO \", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje de error: Datos inválidos\", function () {\r",
									"    const res = pm.response.json();\r",
									"\r",
									"    // Verifica que exista la propiedad \"detail\"\r",
									"    pm.expect(res).to.have.property(\"detail\");\r",
									"\r",
									"    // Verifica que el valor sea exactamente el esperado\r",
									"    pm.expect(res.detail).to.eql(\"Datos inválidos\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=20200110&fecha_hasta=20250415",
							"protocol": "https",
							"host": [
								"api-challenge-wallet",
								"onrender",
								"com"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "20200110"
								},
								{
									"key": "fecha_hasta",
									"value": "20250415"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numero_cuenta\": \"0000012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025"
										},
										{
											"key": "fecha_hasta",
											"value": "14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 00:41:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "e6077694-7f11-4939"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "www-authenticate",
									"value": "Bearer"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307659989c83ae2-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Not authenticated\"\n}"
						},
						{
							"name": "405",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numero_cuenta\": \"0000012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01-01-2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01-01-2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 00:50:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "allow",
									"value": "POST"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "ebbc2e4b-8bea-4f4a"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307728c98143e80-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Method Not Allowed\"\n}"
						},
						{
							"name": "422 [BUG]",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ numero_cuenta:  }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 01:00:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "128"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "d4d9df46-629f-4819"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307814bfc0d3b1d-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": [\n        {\n            \"type\": \"json_invalid\",\n            \"loc\": [\n                \"body\",\n                2\n            ],\n            \"msg\": \"JSON decode error\",\n            \"input\": {},\n            \"ctx\": {\n                \"error\": \"Expecting property name enclosed in double quotes\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "411 [BUG]",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<form>HACK</form>\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 01:00:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "107"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "454b13aa-00e1-46d6"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "93078239fe8e2996-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": [\n        {\n            \"type\": \"json_invalid\",\n            \"loc\": [\n                \"body\",\n                0\n            ],\n            \"msg\": \"JSON decode error\",\n            \"input\": {},\n            \"ctx\": {\n                \"error\": \"Expecting value\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "[TC-019] Consultar Movimientos - fecha_desde MAYOR a fecha_hasta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 400 Bad Request - Consultar Movimientos - fecha_desde MAYOR a fecha_hasta\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje de error: Datos inválidos\", function () {\r",
									"    const res = pm.response.json();\r",
									"\r",
									"    // Verifica que exista la propiedad \"detail\"\r",
									"    pm.expect(res).to.have.property(\"detail\");\r",
									"\r",
									"    // Verifica que el valor sea exactamente el esperado\r",
									"    pm.expect(res.detail).to.eql(\"Datos inválidos\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"99083422\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=20250110&fecha_hasta=20200415",
							"protocol": "https",
							"host": [
								"api-challenge-wallet",
								"onrender",
								"com"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "20250110"
								},
								{
									"key": "fecha_hasta",
									"value": "20200415"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numero_cuenta\": \"0000012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025"
										},
										{
											"key": "fecha_hasta",
											"value": "14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 00:41:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "e6077694-7f11-4939"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "www-authenticate",
									"value": "Bearer"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307659989c83ae2-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Not authenticated\"\n}"
						},
						{
							"name": "405",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numero_cuenta\": \"0000012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01-01-2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01-01-2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 00:50:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "allow",
									"value": "POST"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "ebbc2e4b-8bea-4f4a"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307728c98143e80-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Method Not Allowed\"\n}"
						},
						{
							"name": "422 [BUG]",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ numero_cuenta:  }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 01:00:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "128"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "d4d9df46-629f-4819"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307814bfc0d3b1d-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": [\n        {\n            \"type\": \"json_invalid\",\n            \"loc\": [\n                \"body\",\n                2\n            ],\n            \"msg\": \"JSON decode error\",\n            \"input\": {},\n            \"ctx\": {\n                \"error\": \"Expecting property name enclosed in double quotes\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "411 [BUG]",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<form>HACK</form>\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 01:00:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "107"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "454b13aa-00e1-46d6"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "93078239fe8e2996-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": [\n        {\n            \"type\": \"json_invalid\",\n            \"loc\": [\n                \"body\",\n                0\n            ],\n            \"msg\": \"JSON decode error\",\n            \"input\": {},\n            \"ctx\": {\n                \"error\": \"Expecting value\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "[TC-020] Consultar Movimientos - fecha_desde Invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 400 Bad Request - Consultar Movimientos - fecha_desde Invalida\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje de error: Datos inválidos\", function () {\r",
									"    const res = pm.response.json();\r",
									"\r",
									"    // Verifica que exista la propiedad \"detail\"\r",
									"    pm.expect(res).to.have.property(\"detail\");\r",
									"\r",
									"    // Verifica que el valor sea exactamente el esperado\r",
									"    pm.expect(res.detail).to.eql(\"Datos inválidos\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"99083422\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=2025011&fecha_hasta=20200415",
							"protocol": "https",
							"host": [
								"api-challenge-wallet",
								"onrender",
								"com"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "2025011"
								},
								{
									"key": "fecha_hasta",
									"value": "20200415"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numero_cuenta\": \"0000012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025"
										},
										{
											"key": "fecha_hasta",
											"value": "14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 00:41:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "e6077694-7f11-4939"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "www-authenticate",
									"value": "Bearer"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307659989c83ae2-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Not authenticated\"\n}"
						},
						{
							"name": "405",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numero_cuenta\": \"0000012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01-01-2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01-01-2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 00:50:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "allow",
									"value": "POST"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "ebbc2e4b-8bea-4f4a"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307728c98143e80-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Method Not Allowed\"\n}"
						},
						{
							"name": "422 [BUG]",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ numero_cuenta:  }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 01:00:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "128"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "d4d9df46-629f-4819"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307814bfc0d3b1d-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": [\n        {\n            \"type\": \"json_invalid\",\n            \"loc\": [\n                \"body\",\n                2\n            ],\n            \"msg\": \"JSON decode error\",\n            \"input\": {},\n            \"ctx\": {\n                \"error\": \"Expecting property name enclosed in double quotes\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "411 [BUG]",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<form>HACK</form>\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 01:00:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "107"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "454b13aa-00e1-46d6"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "93078239fe8e2996-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": [\n        {\n            \"type\": \"json_invalid\",\n            \"loc\": [\n                \"body\",\n                0\n            ],\n            \"msg\": \"JSON decode error\",\n            \"input\": {},\n            \"ctx\": {\n                \"error\": \"Expecting value\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "[TC-021] Consultar Movimientos - fecha_hasta Invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 400 Bad Request - Consultar Movimientos - fecha_hasta Invalida\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje de error: Datos inválidos\", function () {\r",
									"    const res = pm.response.json();\r",
									"\r",
									"    // Verifica que exista la propiedad \"detail\"\r",
									"    pm.expect(res).to.have.property(\"detail\");\r",
									"\r",
									"    // Verifica que el valor sea exactamente el esperado\r",
									"    pm.expect(res.detail).to.eql(\"Datos inválidos\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"numero_cuenta\": \"99083422\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=20250110&fecha_hasta=2200415",
							"protocol": "https",
							"host": [
								"api-challenge-wallet",
								"onrender",
								"com"
							],
							"path": [
								"wallet",
								"ultmovimientos"
							],
							"query": [
								{
									"key": "fecha_desde",
									"value": "20250110"
								},
								{
									"key": "fecha_hasta",
									"value": "2200415"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\n  'https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"numero_cuenta\": \"string\"\n}'"
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numero_cuenta\": \"0000012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025&fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025"
										},
										{
											"key": "fecha_hasta",
											"value": "14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 00:41:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "e6077694-7f11-4939"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "www-authenticate",
									"value": "Bearer"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307659989c83ae2-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Not authenticated\"\n}"
						},
						{
							"name": "405",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"numero_cuenta\": \"0000012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01-01-2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01-01-2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 00:50:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "allow",
									"value": "POST"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "ebbc2e4b-8bea-4f4a"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307728c98143e80-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Method Not Allowed\"\n}"
						},
						{
							"name": "422 [BUG]",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ numero_cuenta:  }\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 01:00:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "128"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "d4d9df46-629f-4819"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "9307814bfc0d3b1d-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": [\n        {\n            \"type\": \"json_invalid\",\n            \"loc\": [\n                \"body\",\n                2\n            ],\n            \"msg\": \"JSON decode error\",\n            \"input\": {},\n            \"ctx\": {\n                \"error\": \"Expecting property name enclosed in double quotes\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "411 [BUG]",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IllNS3JYbGdJdTJiNlFoNzVWdVp0cyJ9.eyJodHRwczovL25hcmFuamEuY29tL2luZm8iOnsiY2xpZW50SWQiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSIsImNsaWVudE5hbWUiOiJCMkJFeHRlcm5hbEdhbGljaWEifSwiaXNzIjoiaHR0cHM6Ly9tMm0uc3RhZ2luZy5uYXJhbmpheC5jb20vIiwic3ViIjoiUnhYeXJ3d1ZrSDg0OFVkUGJLWFREUVhrNEVKNktwamFAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbmFyYW5qYS5jb20vcmFudHkvbWVyY2hhbnRzL2FwaSIsImlhdCI6MTc0NDU5MTc3MiwiZXhwIjoxNzQ0Njc4MTcyLCJzY29wZSI6IndyaXRlLnBheW1lbnQgcmVhZC5wYXltZW50X3JlcXVlc3QgcmVhZC5wYXltZW50X21ldGhvZCB3cml0ZS5wYXltZW50X3JlcXVlc3QgcmVhZC5wcm9tb3Rpb24gcmVhZC5pbnRlZ3JhdG9yIHdyaXRlLnBheW1lbnRfY2FsbGJhY2sgd3JpdGUuZXh0ZXJuYWxfdHJhbnNhY3Rpb24gd3JpdGUuaW50ZWdyYXRvciB3cml0ZS5wYXltZW50X21ldGhvZCByZWFkLnNob3BzIHdyaXRlLnFyX3BheW1lbnRzIHdyaXRlLnN0b3JlcyB3cml0ZS5kaXJlY3QtZGViaXRzLW1zIHJlYWQuZGlyZWN0LWRlYml0cy1tcyByZWFkLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHdyaXRlLnRyYW5zYWN0aW9ucy1yZXBvcnRzIHJlYWQuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5zdG9yZXMgd3JpdGUubWVyY2hhbnQtcGxhbiB3cml0ZS5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50X3FyX21vZG8gcmVhZC5wYXltZW50LXB1bmt1IHdyaXRlLnBheW1lbnQtcHVua3UgcmVhZC5xclRvb2xzIHdyaXRlLnFyVG9vbHMgcmVhZC5hcHBsaWNhdGlvbiByZWFkLmJpbiB3cml0ZS5iaW4gd3JpdGUuaW5zdGFsbG1lbnRfcGxhbnMgcmVhZC5jaXBoZXJfZW5jcnlwdCByZWFkLnNvbnFvIHdyaXRlLmNhcmRfYnJhbmRzIHJlYWQuY2FyZC1tYW5hZ2VtZW50IHJlYWQucGF5bWVudC1nYXRld2F5IHdyaXRlLmNpcGhlci1hcGkgcmVhZC5zZXR0aW5ncyB3cml0ZS5zZXR0aW5ncyB3cml0ZS5hcHBsaWNhdGlvbiByZWFkLnNldHRpbmdzX3JhbnR5IHdyaXRlLnNldHRpbmdzX3JhbnR5IHJlYWQucHJvdmlkZXJzIHdyaXRlLnByb3ZpZGVyIHdyaXRlLnN0YXR1c19yYW50eSByZWFkLnN0YXR1c19yYW50eSByZWFkLmVudGl0aWVzX3JhbnR5IHdyaXRlLnByb3ZpZGVycyB3cml0ZS5wcm92aWRlcnMtYmZmIHJlYWQucHJvdmlkZXJzLWJmZiB3cml0ZS50cmFuc2FjdGlvbnNfcmFudHkgd3JpdGUuc29ucW8gcmVhZC50cmFuc2FjdGlvbnNfcmFudHkgcmVhZC5wYW4tb2JmdXNjYXRlZC1zbHMgcmVhZC5tZXJjaGFudCB3cml0ZS5lbnRpdGllc19yYW50eSByZWFkLmNhcmRfYnJhbmRzIHdyaXRlLnBheW1lbnRzIHdyaXRlLnBheW1lbnQtZ2F0ZXdheSByZWFkLnBheW1lbnQgcmVhZC5tb2RlbHNfcmFudHkgd3JpdGUucmFudHktcmVncmVzc2lvbnMgd3JpdGUubW9kZWxzX3JhbnR5IHJlYWQubGltaXRzIHJlYWQub25ib2FyZGluZy1wYXltZW50IHdyaXRlLnJhbnR5LWNpZyByZWFkLnFyLXBheW1lbnQgd3JpdGUucXItcGF5bWVudCB3cml0ZS5jaGVja291dC1hcGkiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJhenAiOiJSeFh5cnd3VmtIODQ4VWRQYktYVERRWGs0RUo2S3BqYSJ9.Ts0GNOcTIH6_iw4BO8XAvhdd0le49r6wjUFUiODRyHuGoeOU4ZfVt9Qk7oy2-8JgbtziLTMRWNN9bdozuVnRvsZFwq_MRqsHyh-06IBxxERO_G8XX_tFByKU4mhpcdyUc_HUs4F8ID8BuA18w4PJabJMfDkpXQFHzwQYVZp9Wk-HzjnxJb87JeOouVU8DIiJIkkj1OJE305ROVhDAgjW4Gfd3X4XodQtktjOiEMo1EJ8jRDE8Tuon0zIe1FJ9xboRgZ93nzxupdXKnwKXRnPQY6mZRBV-2wy-nHE1uxOtUMhwTJFLfLG54Av51xh8Cd9CZhR_TNpQSABoIE83RxfFw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<form>HACK</form>\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api-challenge-wallet.onrender.com/wallet/ultmovimientos?fecha_desde=01%2F01%2F2025fecha_hasta=14%2F04%2F2025",
									"protocol": "https",
									"host": [
										"api-challenge-wallet",
										"onrender",
										"com"
									],
									"path": [
										"wallet",
										"ultmovimientos"
									],
									"query": [
										{
											"key": "fecha_desde",
											"value": "01%2F01%2F2025fecha_hasta=14%2F04%2F2025"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 15 Apr 2025 01:00:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "107"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "rndr-id",
									"value": "454b13aa-00e1-46d6"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "x-render-origin-server",
									"value": "uvicorn"
								},
								{
									"key": "cf-cache-status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "93078239fe8e2996-IAD"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": [\n        {\n            \"type\": \"json_invalid\",\n            \"loc\": [\n                \"body\",\n                0\n            ],\n            \"msg\": \"JSON decode error\",\n            \"input\": {},\n            \"ctx\": {\n                \"error\": \"Expecting value\"\n            }\n        }\n    ]\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "NOVA_TRUST_BANK",
			"value": "825840853443",
			"type": "string"
		},
		{
			"key": "TITANIUM_FINANCE_BANK",
			"value": "423455721156",
			"type": "string"
		},
		{
			"key": "ASTRA_CAPITAL_BANK",
			"value": "595278769781",
			"type": "string"
		}
	]
}